#!/usr/bin/env node

'use strict';

process.title = 'dw-styleguide';

var path = require('path');
var nopt = require('nopt');
var styleguide = require('../index.js');

var knownOpts = {
    'output': path,
    'documentation': path,
    'stylesheets': [String, Array],
    'header-scripts': [String, Array],
    'footer-scripts': [String, Array],
    'templates-path': path,
    'full-template': path,
    'reduced-template': path,
    'iframe-template': path,
    'doc-not-found': String,
    'web-root': String,
    'help': Boolean
};

var shortHands = {
    'o': ['--output'],
    'd': ['--documentation'],
    's': ['--stylesheets'],
    'h': ['--help']
};

function renderHelp() {
    console.log('dw-styleguide CLI');
    console.log('');
    console.log('  Usage:');
    console.log('    dw-styleguide [opts] input-path output-path');
    console.log('    dw-styleguide [opts] -o|--output output-path input-path');
    console.log('');
    console.log('  Avalilable Options:');
    console.log('    -o, --output            The output path');
    console.log('    -d, --documentation     The documentation path');
    console.log('    -s, --stylesheets       Array of stylesheets');
    console.log('        --header-scripts    The scripts added to the head section of the document');
    console.log('        --footer-scripts    Scripts added at the bottom of the document body');
    console.log('        --templates-path    The root of the template files');
    console.log('        --full-template     The template file for the full styleguide page');
    console.log('        --reduced-template  The template file for the reduced styleguide pages');
    console.log('        --iframe-template   The template file for the iframe content pages');
    console.log('        --doc-not-found     The template string for the documentation not found hint');
    console.log('        --web-root          The web-root of the styleguide');
    console.log('    -h, --help              This help page');
}

var opts = nopt(knownOpts, shortHands, process.argv, 2);

if (!(opts.output || opts.argv.remain.length >= 2) && !opts.help) {
    console.log('No output path was specified. This option is not mandatory');
    renderHelp();
    process.exit(1);
}

if (opts.argv.remain.length === 0 && !opts.help) {
    console.log('No input path was specified. You have to specify an input path');
    renderHelp();
    process.exit(1);
}

if (opts.help) {
    renderHelp();
} else {
    var inputPath = opts.argv.remain[0],
        outputPath = opts.output || opts.argv.remain[1],
        docsPath = opts.documentation;

    if (path.isAbsolute(inputPath)) {
        inputPath = path.normalize(
            path.relative(process.cwd(), inputPath)
        ) + path.sep;
    }

    if (path.isAbsolute(outputPath)) {
        inputPath = path.normalize(
            path.relative(process.cwd(), outputPath)
        ) + path.sep;
    }

    if (docsPath && path.isAbsolute(docsPath)) {
        docsPath = path.normalize(
            path.relative(process.cwd(), docsPath)
        ) + path.sep;
    }

    var styleguideOpts = {
        inputPath: inputPath,
        outputPath: outputPath,
        docPath: docsPath,
        stylesheets: opts.stylesheets,
        headerScripts: opts['header-scripts'],
        footerScripts: opts['footer-scripts'],
        templatesPath: opts['templates-path'],
        fullTemplate: opts['full-template'],
        reducedTemplate: opts['reduced-template'],
        iframeTemplate: opts['iframe-template'],
        docNotFoundTemplate: opts['doc-not-found'],
        webPath: opts['web-root']
    };

    styleguide(styleguideOpts, function () {
        console.log('dw-styleguide successfuly rendered');

        process.exit(0);
    });
}
